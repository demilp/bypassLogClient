<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CikAAAAASUVORK5CYII=
</value>
  </data>
</root>